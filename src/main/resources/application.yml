server:
  port: 8070

application:
  version: AppVersion 1.0.0
  title: thejoeun company

spring:
  sql:
    init:
      mode: always # never, always
      # always: embeded db가 아닌 외부 db 사용 시 spring boot를 실행할때 마다 data.sql schema.sql import.sql을 항상 실행
      # never: data.sql schema.sql import.sql을 실행하지 않음
      encoding: utf-8
  datasource:
#    generate-unique-name: false
#    initialization-mode: always
#    url: jdbc:h2:mem:testdb                       # H2 Embeded Memory
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:
#    url: jdbc:mysql://localhost:3306/mydb         # mysql
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: 1234
    url: jdbc:mariadb://localhost:3306/mydb        # mariadb
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    password: 1234
#    url: jdbc:oracle:thin:@localhost:1521:test    # oracle
#    driver-class-name: oracle.jdbc.OracleDriver
#    username: SYSTEM
#    password: test1234
  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    show-sql: true # java코드로 짠 sql을
    defer-datasource-initialization: true # data.sql 사용을 위해서 필수적으로 등록
    properties:
      hibernate:
        format_sql: true  # sql문 pretty하게 보여줌
        use_sql_comments: true # sql문 model comment 보여줌
    generate-ddl: true # true, false(default)
    hibernate:
      ddl-auto: create  # create, create-drop, update, validate, none(default)
      # create: spring boot 처음 실행 시에 Entity로 된 클래스 및 테이블을 drop하고 create함
      # create-drop: spring boot 처음 실행 시에 Entity로 된 클래스 및 테이블을 drop하고 create하고 springboot 종료 시에 다시 drop
      # update: 연결된 db schema와 자바 entity와 비교를 하여 다른 게 있다면 다른 것만 ddl 코드를 생성
      # validate: ddl 구문을 만들진 않고 연결된 db schema와 자바 entity와 비교를 하여 다른게 있다면 오류코드만 보여줌
      # none: ddl 구문을 만들지 않음.

  mvc:
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  devtools:
    livereload:
      enabled: true

  #logging.level:
  logging:
    level:
      org:
        hibernate:
          orm:
            jdbc:
              bind: trace
          SQL: debug
          type:
            decriptor:
              sql: trace
#        hibernate: trace
#        root: trace

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 828607841252-7sn13ahvqr308lhmjqf11m6m4rdu5npj.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile

jwt:
  issuer: loonda9703@gmail.com
  secret_key: 1234
